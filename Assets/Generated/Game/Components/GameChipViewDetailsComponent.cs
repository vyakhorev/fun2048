//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Fun2048.ChipViewDetailsComponent chipViewDetails { get { return (Fun2048.ChipViewDetailsComponent)GetComponent(GameComponentsLookup.ChipViewDetails); } }
    public bool hasChipViewDetails { get { return HasComponent(GameComponentsLookup.ChipViewDetails); } }

    public void AddChipViewDetails(Fun2048.AChip newChip) {
        var index = GameComponentsLookup.ChipViewDetails;
        var component = (Fun2048.ChipViewDetailsComponent)CreateComponent(index, typeof(Fun2048.ChipViewDetailsComponent));
        component.chip = newChip;
        AddComponent(index, component);
    }

    public void ReplaceChipViewDetails(Fun2048.AChip newChip) {
        var index = GameComponentsLookup.ChipViewDetails;
        var component = (Fun2048.ChipViewDetailsComponent)CreateComponent(index, typeof(Fun2048.ChipViewDetailsComponent));
        component.chip = newChip;
        ReplaceComponent(index, component);
    }

    public void RemoveChipViewDetails() {
        RemoveComponent(GameComponentsLookup.ChipViewDetails);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherChipViewDetails;

    public static Entitas.IMatcher<GameEntity> ChipViewDetails {
        get {
            if (_matcherChipViewDetails == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ChipViewDetails);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherChipViewDetails = matcher;
            }

            return _matcherChipViewDetails;
        }
    }
}
