//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Fun2048.LogicalPositionComponent logicalPosition { get { return (Fun2048.LogicalPositionComponent)GetComponent(GameComponentsLookup.LogicalPosition); } }
    public bool hasLogicalPosition { get { return HasComponent(GameComponentsLookup.LogicalPosition); } }

    public void AddLogicalPosition(UnityEngine.Vector2Int newPosition) {
        var index = GameComponentsLookup.LogicalPosition;
        var component = (Fun2048.LogicalPositionComponent)CreateComponent(index, typeof(Fun2048.LogicalPositionComponent));
        component.position = newPosition;
        AddComponent(index, component);
    }

    public void ReplaceLogicalPosition(UnityEngine.Vector2Int newPosition) {
        var index = GameComponentsLookup.LogicalPosition;
        var component = (Fun2048.LogicalPositionComponent)CreateComponent(index, typeof(Fun2048.LogicalPositionComponent));
        component.position = newPosition;
        ReplaceComponent(index, component);
    }

    public void RemoveLogicalPosition() {
        RemoveComponent(GameComponentsLookup.LogicalPosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLogicalPosition;

    public static Entitas.IMatcher<GameEntity> LogicalPosition {
        get {
            if (_matcherLogicalPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LogicalPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLogicalPosition = matcher;
            }

            return _matcherLogicalPosition;
        }
    }
}
