//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Fun2048.SwipeActionComponent swipeAction { get { return (Fun2048.SwipeActionComponent)GetComponent(InputComponentsLookup.SwipeAction); } }
    public bool hasSwipeAction { get { return HasComponent(InputComponentsLookup.SwipeAction); } }

    public void AddSwipeAction(Fun2048.GridDirection newGridDirection) {
        var index = InputComponentsLookup.SwipeAction;
        var component = (Fun2048.SwipeActionComponent)CreateComponent(index, typeof(Fun2048.SwipeActionComponent));
        component.gridDirection = newGridDirection;
        AddComponent(index, component);
    }

    public void ReplaceSwipeAction(Fun2048.GridDirection newGridDirection) {
        var index = InputComponentsLookup.SwipeAction;
        var component = (Fun2048.SwipeActionComponent)CreateComponent(index, typeof(Fun2048.SwipeActionComponent));
        component.gridDirection = newGridDirection;
        ReplaceComponent(index, component);
    }

    public void RemoveSwipeAction() {
        RemoveComponent(InputComponentsLookup.SwipeAction);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherSwipeAction;

    public static Entitas.IMatcher<InputEntity> SwipeAction {
        get {
            if (_matcherSwipeAction == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.SwipeAction);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherSwipeAction = matcher;
            }

            return _matcherSwipeAction;
        }
    }
}
