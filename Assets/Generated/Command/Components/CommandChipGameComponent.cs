//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public Fun2048.ChipGameComponent chipGame { get { return (Fun2048.ChipGameComponent)GetComponent(CommandComponentsLookup.ChipGame); } }
    public bool hasChipGame { get { return HasComponent(CommandComponentsLookup.ChipGame); } }

    public void AddChipGame(Fun2048.Chip2048Game newChip2048Game) {
        var index = CommandComponentsLookup.ChipGame;
        var component = (Fun2048.ChipGameComponent)CreateComponent(index, typeof(Fun2048.ChipGameComponent));
        component.chip2048Game = newChip2048Game;
        AddComponent(index, component);
    }

    public void ReplaceChipGame(Fun2048.Chip2048Game newChip2048Game) {
        var index = CommandComponentsLookup.ChipGame;
        var component = (Fun2048.ChipGameComponent)CreateComponent(index, typeof(Fun2048.ChipGameComponent));
        component.chip2048Game = newChip2048Game;
        ReplaceComponent(index, component);
    }

    public void RemoveChipGame() {
        RemoveComponent(CommandComponentsLookup.ChipGame);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherChipGame;

    public static Entitas.IMatcher<CommandEntity> ChipGame {
        get {
            if (_matcherChipGame == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.ChipGame);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherChipGame = matcher;
            }

            return _matcherChipGame;
        }
    }
}
